version: '3.9'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: zebras
      POSTGRES_USER: zebras
      POSTGRES_PASSWORD: zebras
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zebras"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  zebras-http:
    build: .
    environment:
      MODE: http
      MIGRATE_ON_START: "1"
      ZEBRAS_HTTP_HOST: 0.0.0.0
      ZEBRAS_HTTP_PORT: 43117
      LOG_LEVEL: INFO
      # Slack tokens - set in an .env or override on run
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN:-}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET:-}
      # DB / Redis
      DATABASE_URL: postgresql+asyncpg://zebras:zebras@postgres:5432/zebras
      REDIS_URL: redis://redis:6379/0
    ports:
      - "5000:43117" # bind host 5000 -> container 43117
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # No ngrok service; use random host port mapping above and check via `docker compose ps`.

  zebras-socket:
    build: .
    environment:
      MODE: socket
      MIGRATE_ON_START: "0"
      LOG_LEVEL: INFO
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN:-}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN:-}
      DATABASE_URL: postgresql+asyncpg://zebras:zebras@postgres:5432/zebras
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  zebras-worker:
    build: .
    environment:
      MODE: worker
      MIGRATE_ON_START: "0"
      LOG_LEVEL: INFO
      DATABASE_URL: postgresql+asyncpg://zebras:zebras@postgres:5432/zebras
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  pgdata:
